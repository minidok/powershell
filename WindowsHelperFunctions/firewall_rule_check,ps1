############################################################################################################
# Firewall Rules Cleanup Script
# This script will check all firewall rules and remove the ones that are not needed anymore.
# It will check if the rule is allowing traffic and if the executable is still existing on the system. 
# If not, the rule will be removed.
#
# 2025-03-17
# #########################################################################################################

# Requires Administrative Privileges to run
if (-not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) { 
    Write-Warning "You do not have sufficient permissions to run this script. Please run this script as an Administrator."
    exit
}

# Alle Firewall-Regeln abrufen
$allRules = Get-NetFirewallRule
$totalRules = $allRules.Count
$processedRules = 0
$analyzedRules = 0
$numberofRulesDeleted = 0


# Fortschrittsbalken initialisieren
Write-Host "Total $totalRules Firewall-Rules existing."
Write-Host "Checking for rules that are not needed anymore..."
Read-Host "Press any key to continue..."
Clear-Host
Write-Progress -Activity "Processing FW Rules" -Status "0% done" -PercentComplete 0

foreach ($rule in $allRules) 
{
    $processedRules++
    $percentComplete = ($processedRules / $totalRules) * 100

    # Fortschrittsbalken aktualisieren
    Write-Progress -Activity "Processing FW Rules" -Status "$($percentComplete.ToString("0"))% done" -PercentComplete $percentComplete
    if ( ($rule.Action -eq "Allow") -or ($rule.Direction -eq "Inbound") -or ($rule.Enabled -eq "True"))
    {
        $analyzedRules++
        $filter = $rule | Get-NetFirewallApplicationFilter
        if (($filter.AppPath -ne 'System') -and ($filter.AppPath -ne $null)){
            # Translate ENV-Variable in to real path
            $FullPath = $filter.AppPath
            if ($FullPath -like '%SystemRoot%\*') {
                $FullPath = $FullPath -replace '%SystemRoot%', $env:SystemRoot
                $FullPath = Resolve-Path $FullPath
            } else {}
            #$FullPath = Resolve-Path $filter.AppPath }
            if (-not (Test-Path $FullPath)) {
                Write-Host "[DEL] ID $($rule.InstanceID): $($rule.DisplayName) is being removed"
                Remove-NetFirewallRule -InputObject $rule 
                $numberofRulesDeleted++
            } else { Write-Host "[ok] "$filter.AppPath" Rule is referencing an existing Executable on your system"
            }
    } else {
        Write-Host "[ok] "$rule.DisplayName" Rule is disabled or not ingress relevant."
        }

    } 
}


# Close Progress Bar
Write-Progress -Activity "Processing FW Rules" -Completed
Write-Host "FW Rule-Cleansing done."
Write-Host $numberofRulesDeleted " rules removed."
Write-Host $analyzedRules " rules analyzed."
Read-Host "Press any key to exit..."
